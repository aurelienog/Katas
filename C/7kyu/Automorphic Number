Description:
A number is called Automorphic number if and only if its square ends in the same digits as the number itself. For example, 25 is an automorphic number because its square (625) ends with 25.

Task
Given a positive number, determine if it is Automorphic or not. If it is, return "Automorphic", otherwise return "Not!!"

My solution

const char *autoMorphic(int number)
{
  if(number == 0 || number == 1) 
    return "Automorphic";
  
  long long square;
  square = (long long)number * number;
  
  while(number != 0) {
    if(square % 10 != number % 10) 
    {
      return "Not!!";
    } else {
      number /= 10;
      square /= 10;
    }    
  }
    return "Automorphic";
}

---
Better one  :

const char *autoMorphic(int number)
{
  long long sq = number;
  sq *= sq;
  while(number%10 == sq%10 && number != 0){
    number /= 10;
    sq /= 10;
  }
  if(number == 0)
    return "Automorphic";
  else
    return "Not!!";
}
