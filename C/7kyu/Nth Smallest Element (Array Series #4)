Task
Given an array/list of integers, find the Nth smallest element in the array.

Notes
Array/list size is at least 3.
Array/list's numbers could be a mixture of positives , negatives and zeros.
Repetition in array/list's numbers could occur, so don't remove duplications.
Input >> Output Examples
arr=[3,1,2]            n=2    ==> return 2 
arr=[15,20,7,10,4,3]   n=3    ==> return 7 
arr=[2,169,13,-5,0,-1] n=4    ==> return 2 
arr=[2,1,3,3,1,2],     n=3    ==> return 2 

---
My solution :

int nth_smallest(const int arr[/* count */], int count, int n)
{
  int i = 0;
  int ordered[count];
  
//   copy
  while(i < count) {
    ordered[i] = arr[i];
    i++;
  }
//   closing array
  ordered[i] = '\0';
  
//   ordering
  i = 1;
  int j = 0;
  while(i < count){
    while(j < count){
      if(ordered[i] < ordered[j]) {
        int prev = ordered[j];
        ordered[j] = ordered[i];
        ordered[i] = prev;
      }
      j++;
    }
    j = 0;
    i++;
  }
  
    return ordered[n-1]; 
}

Better solution : 
int nth_smallest(const int *arr, int count, int n)
{
  int copy[count];
  int tmp;
  
  for (int i = 0; i < count; i++)
    copy[i] = arr[i]; 
  
  for (int i = 0; i < count; i++)
    for (int j = 0; j < count - 1; j++)
      if (copy[j] > copy[j + 1])
      {
        tmp = copy[j];
        copy[j] = copy[j + 1];
        copy[j + 1] = tmp;
      }
      
  return (copy[n - 1]);
}
