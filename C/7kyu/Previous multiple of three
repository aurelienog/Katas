Description:
Given a positive integer n: 0 < n < 1e6, remove the last digit until you're left with a number that is a multiple of three.

Return n if the input is already a multiple of three, and if no such number exists, return null, a similar empty value, or -1.

Examples
1      => null
25     => null
36     => 36
1244   => 12
952406 => 9

My solution :

ssize_t prev_mult_of_three(ssize_t n) {
    
  if(n < 3) {
    return -1;
  }
  
  while(n > 3) {
   if(n % 3 == 0) {
    return n;
    } else {
      n /= 10;
    }

        
    if(n < 3) {
      return -1;
    }  
  }
  
  return n;
}

better solution : 

ssize_t prev_mult_of_three(ssize_t n) {
  if(n == 0) return -1;
  else if(n%3 == 0) return n;
  return prev_mult_of_three(n/10);
}
